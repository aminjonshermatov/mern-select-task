{"version":3,"sources":["hooks/useComponentVisible.js","components/Icon/Icon.js","App.js","reportWebVitals.js","index.js"],"names":["useComponentVisible","initialIsVisible","useState","isComponentVisible","setIsComponentVisible","ref","useRef","listRef","handleHideDropdown","event","key","handleClickOutside","current","contains","target","useEffect","document","addEventListener","removeEventListener","Icon","isUp","handleClick","onClick","prev","className","xmlns","width","height","fill","viewBox","d","App","history","useHistory","inputText","setInputText","selected","setSelected","data","setData","hasMore","setHasMore","lastId","setLastId","fetchMoreData","axios","get","then","success","message","countries","length","id","console","error","log","location","pathname","split","country","push","handleChoose","find","el","type","value","onChange","e","placeholder","loader","scrollableTarget","dataLength","next","filter","name","toLowerCase","includes","toLocaleLowerCase","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","component","to","getElementById"],"mappings":"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","file":"static/js/main.132de101.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst useComponentVisible = (initialIsVisible) => {\r\n  const [isComponentVisible, setIsComponentVisible] = useState(\r\n    initialIsVisible\r\n  );\r\n  const ref = useRef(null);\r\n  const listRef = useRef(null);\r\n\r\n  const handleHideDropdown = (event) => {\r\n    if (event.key === \"Escape\") {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (\r\n      ref.current &&\r\n      (!ref.current.contains(event.target) ||\r\n        listRef.current?.contains(event.target))\r\n    ) {\r\n      if (!listRef.current?.contains(event.target)) {\r\n        setIsComponentVisible(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleHideDropdown, true);\r\n    document.addEventListener(\"click\", handleClickOutside, true);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleHideDropdown, true);\r\n      document.removeEventListener(\"click\", handleClickOutside, true);\r\n    };\r\n  });\r\n\r\n  return { ref, listRef, isComponentVisible, setIsComponentVisible };\r\n};\r\n\r\nexport default useComponentVisible;\r\n","import React from \"react\";\r\n\r\nconst Icon = ({ isUp, handleClick }) => {\r\n  const handleClickIcon = () => {\r\n    handleClick(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <span onClick={handleClickIcon} className=\"icon\">\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        className=\"bi bi-caret-down-fill\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        {isUp ? (\r\n          <path d=\"M7.247 4.86l-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\" />\r\n        ) : (\r\n          <path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" />\r\n        )}\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport useComponentVisible from \"./hooks/useComponentVisible\";\n\nimport Icon from \"./components/Icon/Icon\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  const history = useHistory();\n  const [inputText, setInputText] = useState(\"\");\n  const [selected, setSelected] = useState({});\n  const [data, setData] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [lastId, setLastId] = useState(0);\n\n  const fetchMoreData = () => {\n    axios\n      .get(\n        `http://localhost:3001/api/countries/get?count=${10}&lastID=${lastId}`\n      )\n      .then(({ data: { success, message, countries, hasMore } }) => {\n        if (success) {\n          setData((prev) => [...prev, ...countries]);\n          setLastId(countries[countries.length - 1].id);\n          setHasMore(hasMore);\n        } else {\n          console.error(message);\n        }\n      });\n  };\n\n  useEffect(() => {\n    console.log(history);\n    const [_, id] = history.location.pathname.split(\"/\");\n    axios\n      .get(`http://localhost:3001/api/countries/getById?id=${id}`)\n      .then(({ data: { success, message, country } }) => {\n        if (success) {\n          setSelected(country);\n        } else {\n          console.error(message);\n        }\n      });\n    fetchMoreData();\n  }, []);\n\n  const {\n    ref,\n    listRef,\n    isComponentVisible,\n    setIsComponentVisible,\n  } = useComponentVisible(false);\n\n  const handleClickVisible = () => {\n    setIsComponentVisible(true);\n  };\n\n  const handleChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  useEffect(() => {\n    history.push(`/${selected.id}`);\n  }, [selected, history]);\n\n  const handleChoose = (id) => () => {\n    setSelected(data.find((el) => el.id === id));\n    setInputText(\"\");\n    setIsComponentVisible(false);\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-12 wrapper\">\n          <div\n            ref={ref}\n            className={`formSome ${isComponentVisible ? \"active\" : \"\"}`}\n          >\n            {isComponentVisible ? (\n              <div className=\"form__dropdown\">\n                <div className=\"form__dropdown-label\">Select country</div>\n                <Icon handleClick={setIsComponentVisible} isUp={true} />\n                <div className=\"form__dropdown-input\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={inputText}\n                    onChange={handleChange}\n                    placeholder=\"Type the name of country\"\n                  />\n                </div>\n                <ul ref={listRef} className=\"list\">\n                  <div id=\"scrollableDiv\" className=\"list__wrapper\">\n                    <InfiniteScroll\n                      loader={<div className=\"loading\">Loading ...</div>}\n                      scrollableTarget=\"scrollableDiv\"\n                      hasMore={hasMore}\n                      dataLength={data.length}\n                      next={fetchMoreData}\n                    >\n                      {inputText.length > 0\n                        ? data\n                            .filter(({ name }) =>\n                              name\n                                .toLowerCase()\n                                .includes(inputText.toLocaleLowerCase())\n                            )\n                            .map(({ id, name }) => (\n                              <li\n                                className={`country`}\n                                key={id}\n                                onClick={handleChoose(id)}\n                              >\n                                {name}\n                              </li>\n                            ))\n                        : data.map(({ id, name }) => (\n                            <li\n                              className={`country`}\n                              onClick={handleChoose(id)}\n                              key={id}\n                            >\n                              {name}\n                            </li>\n                          ))}\n                    </InfiniteScroll>\n                  </div>\n                </ul>\n              </div>\n            ) : (\n              <>\n                <div onClick={handleClickVisible} className=\"form__selected\">\n                  {selected?.name}\n                </div>\n                <Icon handleClick={setIsComponentVisible} isUp={false} />\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:number\" component={App} />\n        <Redirect to=\"/32\" />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}